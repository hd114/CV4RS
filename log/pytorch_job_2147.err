/faststorage/paul/mamba/envs/pytorch_env/lib/python3.10/site-packages/torchvision/models/_utils.py:208: UserWarning: The parameter 'pretrained' is deprecated since 0.13 and may be removed in the future, please use 'weights' instead.
  warnings.warn(
/faststorage/paul/mamba/envs/pytorch_env/lib/python3.10/site-packages/torchvision/models/_utils.py:223: UserWarning: Arguments other than a weight enum or `None` for 'weights' are deprecated since 0.13 and may be removed in the future. The current behavior is equivalent to passing `weights=None`.
  warnings.warn(msg)
Calculating mean/std:   0%|          | 0/58 [00:00<?, ?it/s]Calculating mean/std:   2%|▏         | 1/58 [00:01<01:43,  1.82s/it]Calculating mean/std:   3%|▎         | 2/58 [00:02<00:50,  1.11it/s]Calculating mean/std:   5%|▌         | 3/58 [00:02<00:30,  1.82it/s]Calculating mean/std:   7%|▋         | 4/58 [00:02<00:20,  2.60it/s]Calculating mean/std:   9%|▊         | 5/58 [00:02<00:15,  3.41it/s]Calculating mean/std:  10%|█         | 6/58 [00:02<00:12,  4.18it/s]Calculating mean/std:  12%|█▏        | 7/58 [00:02<00:10,  4.91it/s]Calculating mean/std:  14%|█▍        | 8/58 [00:02<00:09,  5.50it/s]Calculating mean/std:  16%|█▌        | 9/58 [00:03<00:08,  6.01it/s]Calculating mean/std:  17%|█▋        | 10/58 [00:03<00:07,  6.40it/s]Calculating mean/std:  19%|█▉        | 11/58 [00:03<00:06,  6.71it/s]Calculating mean/std:  21%|██        | 12/58 [00:03<00:06,  6.94it/s]Calculating mean/std:  22%|██▏       | 13/58 [00:03<00:06,  7.12it/s]Calculating mean/std:  24%|██▍       | 14/58 [00:03<00:06,  7.27it/s]Calculating mean/std:  26%|██▌       | 15/58 [00:03<00:06,  6.75it/s]Calculating mean/std:  28%|██▊       | 16/58 [00:03<00:05,  7.02it/s]Calculating mean/std:  29%|██▉       | 17/58 [00:04<00:07,  5.61it/s]Calculating mean/std:  31%|███       | 18/58 [00:04<00:06,  6.08it/s]Calculating mean/std:  33%|███▎      | 19/58 [00:04<00:06,  6.12it/s]Calculating mean/std:  34%|███▍      | 20/58 [00:04<00:06,  6.32it/s]Calculating mean/std:  36%|███▌      | 21/58 [00:04<00:05,  6.53it/s]Calculating mean/std:  38%|███▊      | 22/58 [00:04<00:05,  6.83it/s]Calculating mean/std:  40%|███▉      | 23/58 [00:05<00:05,  6.48it/s]Calculating mean/std:  41%|████▏     | 24/58 [00:05<00:05,  6.73it/s]Calculating mean/std:  43%|████▎     | 25/58 [00:05<00:05,  6.04it/s]Calculating mean/std:  45%|████▍     | 26/58 [00:05<00:04,  6.41it/s]Calculating mean/std:  47%|████▋     | 27/58 [00:05<00:04,  6.28it/s]Calculating mean/std:  48%|████▊     | 28/58 [00:05<00:04,  6.60it/s]Calculating mean/std:  50%|█████     | 29/58 [00:06<00:04,  6.49it/s]Calculating mean/std:  52%|█████▏    | 30/58 [00:06<00:04,  6.62it/s]Calculating mean/std:  53%|█████▎    | 31/58 [00:06<00:04,  6.69it/s]Calculating mean/std:  55%|█████▌    | 32/58 [00:06<00:03,  6.97it/s]Calculating mean/std:  57%|█████▋    | 33/58 [00:06<00:03,  6.57it/s]Calculating mean/std:  59%|█████▊    | 34/58 [00:06<00:03,  6.86it/s]Calculating mean/std:  60%|██████    | 35/58 [00:06<00:03,  6.61it/s]Calculating mean/std:  62%|██████▏   | 36/58 [00:07<00:03,  6.89it/s]Calculating mean/std:  64%|██████▍   | 37/58 [00:07<00:03,  6.63it/s]Calculating mean/std:  66%|██████▌   | 38/58 [00:07<00:03,  6.65it/s]Calculating mean/std:  67%|██████▋   | 39/58 [00:07<00:02,  6.91it/s]Calculating mean/std:  69%|██████▉   | 40/58 [00:07<00:02,  7.09it/s]Calculating mean/std:  71%|███████   | 41/58 [00:07<00:02,  6.65it/s]Calculating mean/std:  72%|███████▏  | 42/58 [00:07<00:02,  6.88it/s]Calculating mean/std:  74%|███████▍  | 43/58 [00:08<00:02,  6.67it/s]Calculating mean/std:  76%|███████▌  | 44/58 [00:08<00:02,  6.94it/s]Calculating mean/std:  78%|███████▊  | 45/58 [00:08<00:02,  6.24it/s]Calculating mean/std:  79%|███████▉  | 46/58 [00:08<00:01,  6.41it/s]Calculating mean/std:  81%|████████  | 47/58 [00:08<00:01,  6.71it/s]Calculating mean/std:  83%|████████▎ | 48/58 [00:08<00:01,  6.94it/s]Calculating mean/std:  84%|████████▍ | 49/58 [00:09<00:01,  6.71it/s]Calculating mean/std:  86%|████████▌ | 50/58 [00:09<00:01,  6.78it/s]Calculating mean/std:  88%|████████▊ | 51/58 [00:09<00:01,  6.90it/s]Calculating mean/std:  90%|████████▉ | 52/58 [00:09<00:00,  7.04it/s]Calculating mean/std:  91%|█████████▏| 53/58 [00:09<00:00,  6.69it/s]Calculating mean/std:  93%|█████████▎| 54/58 [00:09<00:00,  6.91it/s]Calculating mean/std:  95%|█████████▍| 55/58 [00:09<00:00,  6.68it/s]Calculating mean/std:  97%|█████████▋| 56/58 [00:10<00:00,  6.45it/s]Calculating mean/std:  98%|█████████▊| 57/58 [00:10<00:00,  5.71it/s]Calculating mean/std: 100%|██████████| 58/58 [00:10<00:00,  6.54it/s]Calculating mean/std: 100%|██████████| 58/58 [00:10<00:00,  5.45it/s]
Calculating mean/std:   0%|          | 0/28 [00:00<?, ?it/s]Calculating mean/std:   4%|▎         | 1/28 [00:00<00:24,  1.10it/s]Calculating mean/std:   7%|▋         | 2/28 [00:01<00:11,  2.18it/s]Calculating mean/std:  11%|█         | 3/28 [00:01<00:07,  3.19it/s]Calculating mean/std:  14%|█▍        | 4/28 [00:01<00:05,  4.15it/s]Calculating mean/std:  18%|█▊        | 5/28 [00:01<00:04,  4.72it/s]Calculating mean/std:  21%|██▏       | 6/28 [00:01<00:04,  5.44it/s]Calculating mean/std:  25%|██▌       | 7/28 [00:01<00:03,  5.67it/s]Calculating mean/std:  29%|██▊       | 8/28 [00:01<00:03,  6.21it/s]Calculating mean/std:  32%|███▏      | 9/28 [00:02<00:03,  6.10it/s]Calculating mean/std:  36%|███▌      | 10/28 [00:02<00:02,  6.44it/s]Calculating mean/std:  39%|███▉      | 11/28 [00:02<00:02,  6.68it/s]Calculating mean/std:  43%|████▎     | 12/28 [00:02<00:02,  5.68it/s]Calculating mean/std:  46%|████▋     | 13/28 [00:02<00:02,  6.20it/s]Calculating mean/std:  50%|█████     | 14/28 [00:02<00:02,  5.62it/s]Calculating mean/std:  54%|█████▎    | 15/28 [00:03<00:02,  6.06it/s]Calculating mean/std:  57%|█████▋    | 16/28 [00:03<00:02,  4.52it/s]Calculating mean/std:  61%|██████    | 17/28 [00:03<00:02,  5.07it/s]Calculating mean/std:  64%|██████▍   | 18/28 [00:03<00:01,  5.42it/s]Calculating mean/std:  68%|██████▊   | 19/28 [00:03<00:01,  5.90it/s]Calculating mean/std:  71%|███████▏  | 20/28 [00:04<00:01,  5.26it/s]Calculating mean/std:  75%|███████▌  | 21/28 [00:04<00:01,  5.78it/s]Calculating mean/std:  79%|███████▊  | 22/28 [00:04<00:01,  5.52it/s]Calculating mean/std:  82%|████████▏ | 23/28 [00:04<00:00,  5.93it/s]Calculating mean/std:  86%|████████▌ | 24/28 [00:04<00:00,  5.59it/s]Calculating mean/std:  89%|████████▉ | 25/28 [00:04<00:00,  6.09it/s]Calculating mean/std:  93%|█████████▎| 26/28 [00:05<00:00,  5.62it/s]Calculating mean/std:  96%|█████████▋| 27/28 [00:05<00:00,  6.14it/s]Calculating mean/std: 100%|██████████| 28/28 [00:05<00:00,  6.32it/s]Calculating mean/std: 100%|██████████| 28/28 [00:05<00:00,  5.00it/s]
Calculating mean/std:   0%|          | 0/29 [00:00<?, ?it/s]Calculating mean/std:   3%|▎         | 1/29 [00:00<00:22,  1.22it/s]Calculating mean/std:   7%|▋         | 2/29 [00:00<00:11,  2.37it/s]Calculating mean/std:  10%|█         | 3/29 [00:01<00:07,  3.34it/s]Calculating mean/std:  14%|█▍        | 4/29 [00:01<00:05,  4.20it/s]Calculating mean/std:  17%|█▋        | 5/29 [00:01<00:04,  4.85it/s]Calculating mean/std:  21%|██        | 6/29 [00:01<00:04,  5.48it/s]Calculating mean/std:  24%|██▍       | 7/29 [00:01<00:03,  5.90it/s]Calculating mean/std:  28%|██▊       | 8/29 [00:01<00:03,  6.33it/s]Calculating mean/std:  31%|███       | 9/29 [00:02<00:03,  6.03it/s]Calculating mean/std:  34%|███▍      | 10/29 [00:02<00:03,  6.26it/s]Calculating mean/std:  38%|███▊      | 11/29 [00:02<00:02,  6.49it/s]Calculating mean/std:  41%|████▏     | 12/29 [00:02<00:02,  6.21it/s]Calculating mean/std:  45%|████▍     | 13/29 [00:02<00:02,  6.59it/s]Calculating mean/std:  48%|████▊     | 14/29 [00:02<00:02,  6.07it/s]Calculating mean/std:  52%|█████▏    | 15/29 [00:02<00:02,  6.00it/s]Calculating mean/std:  55%|█████▌    | 16/29 [00:03<00:02,  5.08it/s]Calculating mean/std:  59%|█████▊    | 17/29 [00:03<00:02,  5.67it/s]Calculating mean/std:  62%|██████▏   | 18/29 [00:03<00:02,  4.79it/s]Calculating mean/std:  66%|██████▌   | 19/29 [00:03<00:01,  5.33it/s]Calculating mean/std:  69%|██████▉   | 20/29 [00:03<00:01,  5.60it/s]Calculating mean/std:  72%|███████▏  | 21/29 [00:04<00:01,  6.04it/s]Calculating mean/std:  76%|███████▌  | 22/29 [00:04<00:01,  5.88it/s]Calculating mean/std:  79%|███████▉  | 23/29 [00:04<00:00,  6.23it/s]Calculating mean/std:  83%|████████▎ | 24/29 [00:04<00:00,  5.90it/s]Calculating mean/std:  86%|████████▌ | 25/29 [00:04<00:00,  6.33it/s]Calculating mean/std:  90%|████████▉ | 26/29 [00:04<00:00,  5.91it/s]Calculating mean/std:  93%|█████████▎| 27/29 [00:05<00:00,  6.41it/s]Calculating mean/std:  97%|█████████▋| 28/29 [00:05<00:00,  6.03it/s]Calculating mean/std: 100%|██████████| 29/29 [00:05<00:00,  5.31it/s]
Traceback (most recent call last):
  File "/home/paul/projects/CV4RS-main/train.py", line 47, in <module>
    train()
  File "/home/paul/projects/CV4RS-main/train.py", line 39, in train
    global_model, global_results = global_client.train(
  File "/home/paul/projects/CV4RS-main/utils/clients.py", line 595, in train
    self.communication_round(epochs)
  File "/home/paul/projects/CV4RS-main/utils/clients.py", line 755, in communication_round
    model_updates = [client.train_one_round(epochs) for client in self.clients]
  File "/home/paul/projects/CV4RS-main/utils/clients.py", line 755, in <listcomp>
    model_updates = [client.train_one_round(epochs) for client in self.clients]
  File "/home/paul/projects/CV4RS-main/utils/clients.py", line 231, in train_one_round
    self.data_mean, self.data_std = self.calculate_local_mean_and_std(self.train_loader)
TypeError: FLCLient.calculate_local_mean_and_std() takes 1 positional argument but 2 were given
